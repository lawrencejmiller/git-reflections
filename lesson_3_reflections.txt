1. When would you want to use a remote repository rather than keeping all your 
work local?

When I am working remotely; need access to my files via a mobile device; to 
security backup my files to the cloud since local storage alone is unreliable.
***

2. Why might you want to always pull changes manually rather than having Git 
automatically stay up-to-date with your remote repository?

Changes introduced by automatically syncing may affect something I am currently 
working on.
***

3. Describe the differences between forks, clones, and branches. When would you 
use one instead of another?

- Forks are clones that are created solely on GitHub and link back to the original
creator of the repo.

- Clones are copies of any repo (remote or local) that reside on the users local 
machine. Done using the git clone command.

- Branches are separate paths along the git log where changes are made, but the	
commits are following along the label provided to the branch. They are 
tangential breaks from commit histories where new paths are created for various
reasons.

***
4. What is the benefit of having a copy of the last known state of the remote 
stored locally?

You have access to the latest oublished version of the code available for any 
current work you are doing.
***

5. How would you collaborate without using Git or GitHub? What would be easier, 
and what would be harder?

Probably through an endless series of emails, chat sessions, and note boards or 
a Slack channel.
***
Reflect: When to use a separate branch

You just saw that the workflow when making changes in a separate branch is more 
complicated than working directly in master, especially when you need to stay 
up-to-date with changes others are making. Rather than simply pulling and 
pushing, you need to pull changes into your local master branch, merge the 
local master into your branch (different-oil, in our case), then push your 
branch to the remote before finally merging your branch into master, either 
locally or on GitHub.

6. When would you want to make changes in a separate branch rather than directly 
in master? What benefits does each approach have?

Any changes that might affect production code I would want to make in branches.
New features, bug fixes, etc... Anything that might affect the functionality of
the end product. Small changes like typo's in documentation I might be ok with 
making directly to the master branch.